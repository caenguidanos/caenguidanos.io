on:
   pull_request:
      types: [opened, synchronize, reopened]
      branches:
         - main
name: CI/CD Release
env:
   GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}
   GCP_REGION: ${{ secrets.GCP_REGION }}
   GCP_ARTIFACT_REPOSITORY: ${{ secrets.GCP_ARTIFACT_REPOSITORY }}
jobs:
   prepare:
      runs-on: ubuntu-latest
      outputs:
         branch: ${{ steps.check-branch.outputs.branch }}
      steps:
         - id: check-branch
           name: Check Branch
           uses: ./.github/actions/check-branch-name
           with:
              type: main

   unit-testing:
      runs-on: ubuntu-latest
      needs: [prepare]
      env:
         GCP_CLOUD_RUN_SERVICE: unit-jest-reports
      steps:
         - name: Unit run
           uses: ./.github/actions/unit-testing

         - name: Unit deploy
           uses: ./.github/actions/e2e-testing-deploy.yaml
           with:
              key: ${{ secrets.GCP_SA_KEY }}
              region: ${{ env.GCP_REGION }}
              service: ${{ env.GCP_CLOUD_RUN_SERVICE }}-${{ needs.prepare.outputs.branch }}
              image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPOSITORY }}/${{ env.GCP_CLOUD_RUN_SERVICE }}-${{ needs.prepare.outputs.branch }}:${{ github.sha }}

   deploy:
      needs: [unit-testing]
      runs-on: ubuntu-latest
      steps:
         - name: Vercel deployment
           uses: ./.github/actions/deploy.yaml

   e2e-testing:
      needs: [deploy, prepare]
      runs-on: ubuntu-latest
      env:
         GCP_CLOUD_RUN_SERVICE: e2e-playwright-reports
      steps:
         - name: E2E Run
           uses: ./.github/actions/e2e-testing.yaml

         - name: E2E Deploy
           uses: ./.github/actions/e2e-testing-deploy.yaml
           with:
              key: ${{ secrets.GCP_SA_KEY }}
              region: ${{ env.GCP_REGION }}
              service: ${{ env.GCP_CLOUD_RUN_SERVICE }}-${{ needs.prepare.outputs.branch }}
              image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPOSITORY }}/${{ env.GCP_CLOUD_RUN_SERVICE }}-${{ needs.prepare.outputs.branch }}:${{ github.sha }}
